{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/waveform-data/lib/channel.js","../../node_modules/waveform-data/lib/adapters/object.js","../../node_modules/waveform-data/lib/adapters/arraybuffer.js","../../node_modules/waveform-data/lib/core.js","../../node_modules/inline-worker/index.js","../../node_modules/waveform-data/lib/builders/audiodecoder.js","../../node_modules/waveform-data/lib/builders/options.js","../../node_modules/waveform-data/lib/builders/webaudio.js","../../node_modules/waveform-data/waveform-data.js","../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-transition/src/transition/schedule.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"use strict\";\n\n/**\n * Provides access to the waveform data for a single audio channel.\n *\n * @param {WaveformData} waveformData Waveform data.\n * @param {Number} channelIndex Channel number.\n * @constructor\n */\n\nfunction WaveformDataChannel(waveformData, channelIndex) {\n  this._waveformData = waveformData;\n  this._channelIndex = channelIndex;\n}\n\n/**\n * Returns a min value for a specific offset.\n *\n * ```javascript\n * var waveform = WaveformData.create({ ... });\n * var channel = waveform.channel(0);\n *\n * console.log(channel.min_sample(10)); // -> -12\n * ```\n *\n * @api\n * @param {Integer} offset\n * @return {Number} Offset min value\n */\n\nWaveformDataChannel.prototype.min_sample = function(index) {\n  var offset = (index * this._waveformData.channels + this._channelIndex) * 2;\n\n  return this._waveformData._adapter.at(offset);\n};\n\n/**\n * Returns a max value for a specific offset.\n *\n * ```javascript\n * var waveform = WaveformData.create({ ... });\n * var channel = waveform.channel(0);\n *\n * console.log(channel.max_sample(10)); // -> 12\n * ```\n *\n * @api\n * @param {Integer} offset\n * @return {Number} Offset max value\n */\n\nWaveformDataChannel.prototype.max_sample = function(index) {\n  var offset = (index * this._waveformData.channels + this._channelIndex) * 2 + 1;\n\n  return this._waveformData._adapter.at(offset);\n};\n\n/**\n * Returns all the min values within the current offset.\n *\n * ```javascript\n * var waveform = WaveformData.create({ ... });\n * var channel = waveform.channel(0);\n *\n * console.log(channel.min_array()); // -> [-7, -5, -10]\n * ```\n *\n * @return {Array.<Integer>} Min values contained in the offset.\n */\n\nWaveformDataChannel.prototype.min_array = function() {\n  return this._waveformData._offsetValues(\n    0,\n    this._waveformData.length,\n    this._channelIndex * 2\n  );\n};\n\n/**\n * Returns all the max values within the current offset.\n *\n * ```javascript\n * var waveform = WaveformData.create({ ... });\n * var channel = waveform.channel(0);\n *\n * console.log(channel.max_array()); // -> [9, 6, 11]\n * ```\n *\n * @return {Array.<Integer>} Max values contained in the offset.\n */\n\nWaveformDataChannel.prototype.max_array = function() {\n  return this._waveformData._offsetValues(\n    0,\n    this._waveformData.length,\n    this._channelIndex * 2 + 1\n  );\n};\n\nmodule.exports = WaveformDataChannel;\n","\"use strict\";\n\n/**\n * Object adapter consumes waveform data in JSON format.\n * It is used as a data abstraction layer by `WaveformData`.\n *\n * This is supposed to be a fallback for browsers not supporting ArrayBuffer:\n * * **Pros**: easy to debug and quite self describing.\n * * **Cons**: slower than ArrayBuffer, more memory consumption.\n *\n * @param {Object} data Waveform data object\n * @constructor\n */\n\nfunction WaveformDataObjectAdapter(data) {\n  this._data = data;\n}\n\n/**\n * Detects if a set of data is suitable for the Object adapter.\n * It is used internally by `WaveformData.create` so you should not bother using it.\n *\n * @static\n * @param {Mixed} data\n * @returns {boolean}\n */\n\nWaveformDataObjectAdapter.isCompatible = function isCompatible(data) {\n  return data &&\n    typeof data === \"object\" &&\n    \"sample_rate\" in data &&\n    \"samples_per_pixel\" in data &&\n    \"bits\" in data &&\n    \"length\" in data &&\n    \"data\" in data;\n};\n\n/**\n * @namespace WaveformDataObjectAdapter\n */\n\nWaveformDataObjectAdapter.prototype = {\n  /**\n   * Returns the data format version number.\n   *\n   * @return {Integer} Version number of the consumed data format.\n   */\n\n  get version() {\n    return this._data.version || 1;\n  },\n\n  /**\n   * Returns the number of bits per sample, either 8 or 16.\n   */\n\n  get bits() {\n    return this._data.bits;\n  },\n\n  /**\n   * Returns the number of channels.\n   *\n   * @return {Integer} Number of channels.\n   */\n\n  get channels() {\n    return this._data.channels || 1;\n  },\n\n  /**\n   * Returns the number of samples per second.\n   *\n   * @return {Integer} Number of samples per second.\n   */\n\n  get sample_rate() {\n    return this._data.sample_rate;\n  },\n\n  /**\n   * Returns the scale (number of samples per pixel).\n   *\n   * @return {Integer} Number of samples per pixel.\n   */\n\n  get scale() {\n    return this._data.samples_per_pixel;\n  },\n\n  /**\n   * Returns the length of the waveform data (number of data points).\n   *\n   * @return {Integer} Length of the waveform data.\n   */\n\n  get length() {\n    return this._data.length;\n  },\n\n  /**\n   * Returns a value at a specific offset.\n   *\n   * @param {Integer} index\n   * @return {number} waveform value\n   */\n\n  at: function at_sample(index) {\n    var data = this._data.data;\n\n    if (index >= 0 && index < data.length) {\n      return data[index];\n    }\n    else {\n      throw new RangeError(\"Invalid index: \" + index);\n    }\n  },\n\n  /**\n   * Returns a new data object with the concatenated waveform.\n   * Both waveforms must have identical metadata (version, channels, etc)\n   *\n   * @param {...WaveformDataObjectAdapter} otherAdapters One or more adapters\n   * @return {Mixed} combined waveform data\n   */\n\n  concatBuffers: function() {\n    var otherAdapters = Array.prototype.slice.call(arguments);\n    var otherDatas = otherAdapters.map(function(a) {\n      return a._data.data;\n    });\n    var result = Object.assign({}, this._data);\n\n    result.data = result.data.concat.apply(result.data, otherDatas);\n    result.length += otherAdapters.reduce(function(sum, adapter) {\n      return sum + adapter.length;\n    }, 0);\n    return result;\n  }\n};\n\nmodule.exports = WaveformDataObjectAdapter;\n","\"use strict\";\n\n/**\n * ArrayBuffer adapter consumes binary waveform data.\n * It is used as a data abstraction layer by `WaveformData`.\n *\n * This is supposed to be the fastest adapter ever:\n * * **Pros**: working directly in memory, everything is done by reference\n *   (including the offsetting)\n * * **Cons**: binary data are hardly readable without data format knowledge\n *   (and this is why this adapter exists).\n *\n * @param {ArrayBuffer} buffer\n * @constructor\n */\n\nfunction WaveformDataArrayBufferAdapter(buffer) {\n  this._data = new DataView(buffer);\n  this._offset = this.version === 2 ? 24 : 20;\n}\n\n/**\n * Detects if a set of data is suitable for the ArrayBuffer adapter.\n * It is used internally by `WaveformData.create` so you should not bother using it.\n *\n * @static\n * @param {Mixed} data\n * @returns {boolean}\n */\n\nWaveformDataArrayBufferAdapter.isCompatible = function isCompatible(data) {\n  var isCompatible = data && typeof data === \"object\" && \"byteLength\" in data;\n\n  if (isCompatible) {\n    var view = new DataView(data);\n    var version = view.getInt32(0, true);\n\n    if (version !== 1 && version !== 2) {\n      throw new TypeError(\"This waveform data version not supported.\");\n    }\n  }\n\n  return isCompatible;\n};\n\n/**\n * @namespace WaveformDataArrayBufferAdapter\n */\n\n WaveformDataArrayBufferAdapter.prototype = {\n  /**\n   * Returns the data format version number.\n   *\n   * @return {Integer} Version number of the consumed data format.\n   */\n\n  get version() {\n    return this._data.getInt32(0, true);\n  },\n\n  /**\n   * Returns the number of bits per sample, either 8 or 16.\n   */\n\n  get bits() {\n    var bits = Boolean(this._data.getUint32(4, true));\n\n    return bits ? 8 : 16;\n  },\n\n  /**\n   * Returns the number of channels.\n   *\n   * @return {Integer} Number of channels.\n   */\n\n  get channels() {\n    if (this.version === 2) {\n      return this._data.getInt32(20, true);\n    }\n    else {\n      return 1;\n    }\n  },\n\n  /**\n   * Returns the number of samples per second.\n   *\n   * @return {Integer} Number of samples per second.\n   */\n\n  get sample_rate() {\n    return this._data.getInt32(8, true);\n  },\n\n  /**\n   * Returns the scale (number of samples per pixel).\n   *\n   * @return {Integer} Number of samples per pixel.\n   */\n\n  get scale() {\n    return this._data.getInt32(12, true);\n  },\n\n  /**\n   * Returns the length of the waveform data (number of data points).\n   *\n   * @return {Integer} Length of the waveform data.\n   */\n\n  get length() {\n    return this._data.getUint32(16, true);\n  },\n\n  /**\n   * Returns a value at a specific offset.\n   *\n   * @param {Integer} index\n   * @return {Integer} waveform value\n   */\n\n  at: function at_sample(index) {\n    return this._data.getInt8(this._offset + index);\n  },\n\n  /**\n   * Returns a new ArrayBuffer with the concatenated waveform.\n   * All waveforms must have identical metadata (version, channels, etc)\n   *\n   * @param {...WaveformDataArrayBufferAdapter} otherAdapters One or more adapters to concatenate\n   * @return {ArrayBuffer} concatenated ArrayBuffer\n   */\n\n  concatBuffers: function() {\n    var otherAdapters = Array.prototype.slice.call(arguments);\n    var headerSize = this._offset;\n    var totalSize = headerSize;\n    var totalDataLength = 0;\n    var bufferCollection = [this].concat(otherAdapters).map(function(w) {\n      return w._data.buffer;\n    });\n    var i, buffer;\n\n    for (i = 0; i < bufferCollection.length; i++) {\n      buffer = bufferCollection[i];\n      var dataSize = new DataView(buffer).getInt32(16, true);\n\n      totalSize += buffer.byteLength - headerSize;\n      totalDataLength += dataSize;\n    }\n\n    var totalBuffer = new ArrayBuffer(totalSize);\n    var sourceHeader = new DataView(bufferCollection[0]);\n    var totalBufferView = new DataView(totalBuffer);\n\n    // Copy the header from the first chunk\n    for (i = 0; i < headerSize; i++) {\n      totalBufferView.setUint8(i, sourceHeader.getUint8(i));\n    }\n    // Rewrite the data-length header item to reflect all of the samples concatenated together\n    totalBufferView.setInt32(16, totalDataLength, true);\n\n    var offset = 0;\n    var dataOfTotalBuffer = new Uint8Array(totalBuffer, headerSize);\n\n    for (i = 0; i < bufferCollection.length; i++) {\n      buffer = bufferCollection[i];\n      dataOfTotalBuffer.set(new Uint8Array(buffer, headerSize), offset);\n      offset += buffer.byteLength - headerSize;\n    }\n\n    return totalBuffer;\n  }\n};\n\nmodule.exports = WaveformDataArrayBufferAdapter;\n","\"use strict\";\n\nvar WaveformDataChannel = require(\"./channel\");\nvar WaveformDataObjectAdapter = require(\"./adapters/object\");\nvar WaveformDataArrayBufferAdapter = require(\"./adapters/arraybuffer\");\n\nvar adapters = [\n  WaveformDataArrayBufferAdapter,\n  WaveformDataObjectAdapter\n];\n\n/**\n * Facade to iterate on audio waveform response.\n *\n * ```javascript\n * var waveform = new WaveformData({ ... });\n *\n * var json_waveform = new WaveformData(xhr.responseText);\n *\n * var arraybuff_waveform = new WaveformData(\n *   getArrayBufferData()\n * );\n * ```\n *\n * ## Offsets\n *\n * An **offset** is a non-destructive way to iterate on a subset of data.\n *\n * It is the easiest way to **navigate** through data without having to deal\n * with complex calculations. Simply iterate over the data to display them.\n *\n * *Notice*: the default offset is the entire set of data.\n *\n * @param {String|ArrayBuffer|Object} data Waveform data,\n * to be consumed by the related adapter.\n * @param {WaveformData.adapter|Function} adapter Backend adapter used to manage\n * access to the data.\n * @constructor\n */\n\nfunction WaveformData(data) {\n  var Adapter = this._getAdapter(data);\n\n  this._adapter = new Adapter(data);\n\n  this._channels = [];\n\n  for (var channel = 0; channel < this.channels; channel++) {\n    this._channels[channel] = new WaveformDataChannel(this, channel);\n  }\n}\n\n/**\n * Creates an instance of WaveformData by guessing the adapter from the\n * data type. It can also accept an XMLHttpRequest response.\n *\n * ```javascript\n * var xhr = new XMLHttpRequest();\n * xhr.open(\"GET\", \"http://example.com/waveforms/track.dat\");\n * xhr.responseType = \"arraybuffer\";\n *\n * xhr.addEventListener(\"load\", function onResponse(progressEvent) {\n *   var waveform = WaveformData.create(progressEvent.target);\n *\n *   console.log(waveform.duration);\n * });\n *\n * xhr.send();\n * ```\n *\n * @static\n * @throws TypeError\n * @param {Object} data\n * @return {WaveformData}\n */\n\nWaveformData.create = function create(data) {\n  return new WaveformData(data);\n};\n\n/**\n * Public API for the Waveform Data manager.\n *\n * @namespace WaveformData\n */\n\nWaveformData.prototype = {\n\n  _getAdapter: function(data) {\n    var Adapter = null;\n\n    adapters.some(function(AdapterClass) {\n      if (AdapterClass.isCompatible(data)) {\n        Adapter = AdapterClass;\n        return true;\n      }\n    });\n\n    if (Adapter === null) {\n      throw new TypeError(\"Could not detect a WaveformData adapter from the input.\");\n    }\n\n    return Adapter;\n  },\n\n  /**\n   * Creates a new WaveformData object with resampled data.\n   * Returns a rescaled waveform, to either fit the waveform to a specific\n   * width, or to a specific zoom level.\n   *\n   * **Note**: You may specify either the *width* or the *scale*, but not both.\n   * The `scale` will be deduced from the `width` you want to fit the data into.\n   *\n   * Adapted from Sequence::GetWaveDisplay in Audacity, with permission.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   * // ...\n   *\n   * // fitting the data in a 500px wide canvas\n   * var resampled_waveform = waveform.resample({ width: 500 });\n   *\n   * console.log(resampled_waveform.min.length);   // -> 500\n   *\n   * // zooming out on a 3 times less precise scale\n   * var resampled_waveform = waveform.resample({ scale: waveform.scale * 3 });\n   * ```\n   *\n   * @see https://code.google.com/p/audacity/source/browse/audacity-src/trunk/src/Sequence.cpp\n   * @param {{ width: Number } | { scale: Number }} options Either a width (in pixels) or a zoom level (in samples per pixel)\n   * @return {WaveformData} New resampled object\n   */\n\n  resample: function(options) {\n    if (typeof options === \"number\") {\n      options = {\n        width: options\n      };\n    }\n\n    options.input_index = typeof options.input_index === \"number\" ? options.input_index : null;\n    options.output_index = typeof options.output_index === \"number\" ? options.output_index : null;\n    options.scale = typeof options.scale === \"number\" ? options.scale : null;\n    options.width = typeof options.width === \"number\" ? options.width : null;\n\n    var is_partial_resampling = Boolean(options.input_index) || Boolean(options.output_index);\n\n    if (options.input_index != null && (options.input_index < 0)) {\n      throw new RangeError(\"options.input_index should be a positive integer value. [\" + options.input_index + \"]\");\n    }\n\n    if (options.output_index != null && (options.output_index < 0)) {\n      throw new RangeError(\"options.output_index should be a positive integer value. [\" + options.output_index + \"]\");\n    }\n\n    if (options.width != null && (options.width <= 0)) {\n      throw new RangeError(\"options.width should be a strictly positive integer value. [\" + options.width + \"]\");\n    }\n\n    if (options.scale != null && (options.scale <= 0)) {\n      throw new RangeError(\"options.scale should be a strictly positive integer value. [\" + options.scale + \"]\");\n    }\n\n    if (!options.scale && !options.width) {\n      throw new RangeError(\"You should provide either a resampling scale or a width in pixel the data should fit in.\");\n    }\n\n    var definedPartialOptionsCount = [\"width\", \"scale\", \"output_index\", \"input_index\"].reduce(function(count, key) {\n      return count + (options[key] === null ? 0 : 1);\n    }, 0);\n\n    if (is_partial_resampling && definedPartialOptionsCount !== 4) {\n      throw new Error(\"Some partial resampling options are missing. You provided \" + definedPartialOptionsCount + \" of them over 4.\");\n    }\n\n    var output_data = [];\n    var samples_per_pixel = options.scale || Math.floor(this.duration * this.sample_rate / options.width); // scale we want to reach\n    var scale = this.scale; // scale we are coming from\n    var channel_count = 2 * this.channels;\n\n    var input_buffer_size = this.length; // the amount of data we want to resample i.e. final zoom want to resample all data but for intermediate zoom we want to resample subset\n    var input_index = options.input_index || 0; // is this start point? or is this the index at current scale\n    var output_index = options.output_index || 0; // is this end point? or is this the index at scale we want to be?\n\n    var channels = this.channels;\n\n    var min = new Array(channels);\n    var max = new Array(channels);\n\n    var channel;\n\n    for (channel = 0; channel < channels; ++channel) {\n      if (input_buffer_size > 0) {\n        min[channel] = this.channel(channel).min_sample(input_index);\n        max[channel] = this.channel(channel).max_sample(input_index);\n      }\n      else {\n        min[channel] = 0;\n        max[channel] = 0;\n      }\n    }\n\n    var min_value = -128;\n    var max_value = 127;\n\n    if (samples_per_pixel < scale) {\n      throw new Error(\"Zoom level \" + samples_per_pixel + \" too low, minimum: \" + scale);\n    }\n\n    var where, prev_where, stop, value, last_input_index;\n\n    function sample_at_pixel(x) {\n      return Math.floor(x * samples_per_pixel);\n    }\n\n    function add_sample(min, max) {\n      output_data.push(min, max);\n    }\n\n    while (input_index < input_buffer_size) {\n      while (Math.floor(sample_at_pixel(output_index) / scale) <= input_index) {\n        if (output_index > 0) {\n          for (channel = 0; channel < channels; ++channel) {\n            add_sample(min[channel], max[channel]);\n          }\n        }\n\n        last_input_index = input_index;\n\n        output_index++;\n\n        where      = sample_at_pixel(output_index);\n        prev_where = sample_at_pixel(output_index - 1);\n\n        if (where !== prev_where) {\n          for (channel = 0; channel < channels; ++channel) {\n            min[channel] = max_value;\n            max[channel] = min_value;\n          }\n        }\n      }\n\n      where = sample_at_pixel(output_index);\n      stop = Math.floor(where / scale);\n\n      if (stop > input_buffer_size) {\n        stop = input_buffer_size;\n      }\n\n      while (input_index < stop) {\n        for (channel = 0; channel < channels; ++channel) {\n          value = this.channel(channel).min_sample(input_index);\n\n          if (value < min[channel]) {\n            min[channel] = value;\n          }\n\n          value = this.channel(channel).max_sample(input_index);\n\n          if (value > max[channel]) {\n            max[channel] = value;\n          }\n        }\n\n        input_index++;\n      }\n\n      if (is_partial_resampling && (output_data.length / channel_count) >= options.width) {\n        break;\n      }\n    }\n\n    if (is_partial_resampling) {\n      if ((output_data.length / channel_count) > options.width &&\n          input_index !== last_input_index) {\n          for (channel = 0; channel < channels; ++channel) {\n            add_sample(min[channel], max[channel]);\n          }\n      }\n    }\n    else if (input_index !== last_input_index) {\n      for (channel = 0; channel < channels; ++channel) {\n        add_sample(min[channel], max[channel]);\n      }\n    }\n\n    return new WaveformData({\n      version: this._adapter.version,\n      bits: this.bits,\n      samples_per_pixel: samples_per_pixel,\n      length: output_data.length / channel_count,\n      data: output_data,\n      sample_rate: this.sample_rate,\n      channels: channels\n    });\n  },\n\n  /**\n   * Return a new WaveformData instance with the concatenated result of multiple waveforms.\n   *\n   * @param {...WaveformData} otherWaveforms One or more waveform instances to concatenate\n   * @return {WaveformData} New concatenated object\n   */\n  concat: function() {\n    var self = this;\n    var otherWaveforms = Array.prototype.slice.call(arguments);\n\n    // Check that all the supplied waveforms are compatible\n    otherWaveforms.forEach(function(otherWaveform) {\n      if (self.channels !== otherWaveform.channels ||\n        self.sample_rate !== otherWaveform.sample_rate ||\n        self.scale !== otherWaveform.scale ||\n        Object.getPrototypeOf(self._adapter) !== Object.getPrototypeOf(otherWaveform._adapter) ||\n        self._adapter.version !== otherWaveform._adapter.version) {\n        throw new Error(\"Waveforms are incompatible\");\n      }\n    });\n\n    var otherAdapters = otherWaveforms.map(function(w) {\n      return w._adapter;\n    });\n\n    var combinedBuffer = this._adapter.concatBuffers.apply(this._adapter, otherAdapters);\n\n    return new WaveformData(combinedBuffer);\n  },\n\n  /**\n   * Return the unpacked values for a particular offset.\n   *\n   * @param {Integer} start\n   * @param {Integer} length\n   * @param {Integer} correction The step to skip for each iteration\n   * (as the response body is [min, max, min, max...])\n   * @return {Array.<Integer>}\n   */\n\n  _offsetValues: function getOffsetValues(start, length, correction) {\n    var adapter = this._adapter;\n    var values = [];\n    var channels = this.channels;\n\n    correction += (start * channels * 2); // offset the positioning query\n\n    for (var i = 0; i < length; i++) {\n      values.push(adapter.at((i * channels * 2) + correction));\n    }\n\n    return values;\n  },\n\n  /**\n   * Returns the length of the waveform, in pixels.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   * console.log(waveform.length); // -> 600\n   * ```\n   *\n   * @api\n   * @return {Integer} Length of the waveform, in pixels.\n   */\n\n  get length() {\n    return this._adapter.length;\n  },\n\n  /**\n   * Returns the number of bits per sample, either 8 or 16.\n   */\n\n  get bits() {\n    return this._adapter.bits;\n  },\n\n  /**\n   * Returns the (approximate) duration of the audio file, in seconds.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   * console.log(waveform.duration); // -> 10.33333333333\n   * ```\n   *\n   * @api\n   * @return {number} Duration of the audio waveform, in seconds.\n   */\n\n  get duration() {\n    return this.length * this.scale / this.sample_rate;\n  },\n\n  /**\n   * Return the number of pixels per second.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   *\n   * console.log(waveform.pixels_per_second); // -> 93.75\n   * ```\n   *\n   * @api\n   * @return {number} Number of pixels per second.\n   */\n\n  get pixels_per_second() {\n    return this.sample_rate / this.scale;\n  },\n\n  /**\n   * Return the amount of time represented by a single pixel.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   *\n   * console.log(waveform.seconds_per_pixel);       // -> 0.010666666666666666\n   * ```\n   *\n   * @return {number} Amount of time (in seconds) contained in a pixel.\n   */\n\n  get seconds_per_pixel() {\n    return this.scale / this.sample_rate;\n  },\n\n  /**\n   * Returns the number of waveform channels.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   * console.log(waveform.channels);    // -> 1\n   * ```\n   *\n   * @api\n   * @return {number} Number of channels.\n   */\n\n  get channels() {\n    return this._adapter.channels;\n  },\n\n  /**\n   * Returns a waveform channel.\n   *\n   * ```javascript\n   * var waveform = WaveformData.create({ ... });\n   * var channel = waveform.channel(0);\n   * console.log(channel.min_sample(0)); // -> 1\n   * ```\n   *\n   * @api\n   * @param {Number} Channel index.\n   * @return {WaveformDataChannel} Waveform channel.\n   */\n\n  channel: function(index) {\n    if (index >= 0 && index < this._channels.length) {\n      return this._channels[index];\n    }\n    else {\n      throw new RangeError(\"Invalid channel: \" + index);\n    }\n  },\n\n  /**\n   * Returns the number of samples per second.\n   *\n   * @return {Integer} Number of samples per second.\n   */\n\n  get sample_rate() {\n    return this._adapter.sample_rate;\n  },\n\n  /**\n   * Returns the scale (number of samples per pixel).\n   *\n   * @return {Integer} Number of samples per pixel.\n   */\n\n  get scale() {\n    return this._adapter.scale;\n  },\n\n  /**\n   * Returns the pixel location for a given time.\n   *\n   * @param {number} time\n   * @return {integer} Index location for a specific time.\n   */\n\n  at_time: function at_time(time) {\n    return Math.floor(time * this.sample_rate / this.scale);\n  },\n\n  /**\n   * Returns the time in seconds for a given index\n   *\n   * @param {Integer} index\n   * @return {number}\n   */\n\n  time: function time(index) {\n    return index * this.scale / this.sample_rate;\n  }\n};\n\nmodule.exports = WaveformData;\n","var WORKER_ENABLED = !!(global === global.window && global.URL && global.Blob && global.Worker);\n\nfunction InlineWorker(func, self) {\n  var _this = this;\n  var functionBody;\n\n  self = self || {};\n\n  if (WORKER_ENABLED) {\n    functionBody = func.toString().trim().match(\n      /^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/\n    )[1];\n\n    return new global.Worker(global.URL.createObjectURL(\n      new global.Blob([ functionBody ], { type: \"text/javascript\" })\n    ));\n  }\n\n  function postMessage(data) {\n    setTimeout(function() {\n      _this.onmessage({ data: data });\n    }, 0);\n  }\n\n  this.self = self;\n  this.self.postMessage = postMessage;\n\n  setTimeout(func.bind(self, self), 0);\n}\n\nInlineWorker.prototype.postMessage = function postMessage(data) {\n  var _this = this;\n\n  setTimeout(function() {\n    _this.self.onmessage({ data: data });\n  }, 0);\n};\n\nmodule.exports = InlineWorker;\n","\"use strict\";\n\nvar WaveformData = require(\"../core\");\nvar InlineWorker = require(\"inline-worker\");\n\nfunction processWorker(workerArgs, callback) {\n  var worker = new InlineWorker(function() {\n    var INT8_MAX = 127;\n    var INT8_MIN = -128;\n\n    function calculateWaveformDataLength(audio_sample_count, scale) {\n      var data_length = Math.floor(audio_sample_count / scale);\n\n      var samples_remaining = audio_sample_count - (data_length * scale);\n\n      if (samples_remaining > 0) {\n        data_length++;\n      }\n\n      return data_length;\n    }\n\n    this.addEventListener(\"message\", function listener(evt) {\n      var scale = evt.data.scale;\n      var amplitude_scale = evt.data.amplitude_scale;\n      var split_channels = evt.data.split_channels;\n      var audio_buffer = evt.data.audio_buffer;\n\n      var channels = audio_buffer.channels;\n      var output_channels = split_channels ? channels.length : 1;\n      var version = output_channels === 1 ? 1 : 2;\n      var header_size = version === 1 ? 20 : 24;\n      var data_length = calculateWaveformDataLength(audio_buffer.length, scale);\n      var total_size = header_size + data_length * 2 * output_channels;\n      var data_object = new DataView(new ArrayBuffer(total_size));\n\n      var scale_counter = 0;\n      var buffer_length = audio_buffer.length;\n      var offset = header_size;\n      var channel, i;\n\n      var min_value = new Array(output_channels);\n      var max_value = new Array(output_channels);\n\n      for (channel = 0; channel < output_channels; channel++) {\n        min_value[channel] = Infinity;\n        max_value[channel] = -Infinity;\n      }\n\n      data_object.setInt32(0, version, true); // Version\n      data_object.setUint32(4, 1, true); // Is 8 bit?\n      data_object.setInt32(8, audio_buffer.sampleRate, true); // Sample rate\n      data_object.setInt32(12, scale, true); // Scale\n      data_object.setInt32(16, data_length, true); // Length\n\n      if (version === 2) {\n        data_object.setInt32(20, output_channels, true);\n      }\n\n      for (i = 0; i < buffer_length; i++) {\n        var sample = 0;\n\n        if (output_channels === 1) {\n          for (channel = 0; channel < channels.length; ++channel) {\n            sample += channels[channel][i];\n          }\n\n          sample = Math.floor(INT8_MAX * sample * amplitude_scale / channels.length);\n\n          if (sample < min_value[0]) {\n            min_value[0] = sample;\n\n            if (min_value[0] < INT8_MIN) {\n              min_value[0] = INT8_MIN;\n            }\n          }\n\n          if (sample > max_value[0]) {\n            max_value[0] = sample;\n\n            if (max_value[0] > INT8_MAX) {\n              max_value[0] = INT8_MAX;\n            }\n          }\n        }\n        else {\n          for (channel = 0; channel < output_channels; ++channel) {\n            sample = Math.floor(INT8_MAX * channels[channel][i] * amplitude_scale);\n\n            if (sample < min_value[channel]) {\n              min_value[channel] = sample;\n\n              if (min_value[channel] < INT8_MIN) {\n                min_value[channel] = INT8_MIN;\n              }\n            }\n\n            if (sample > max_value[channel]) {\n              max_value[channel] = sample;\n\n              if (max_value[channel] > INT8_MAX) {\n                max_value[channel] = INT8_MAX;\n              }\n            }\n          }\n        }\n\n        if (++scale_counter === scale) {\n          for (channel = 0; channel < output_channels; channel++) {\n            data_object.setInt8(offset++, min_value[channel]);\n            data_object.setInt8(offset++, max_value[channel]);\n\n            min_value[channel] = Infinity;\n            max_value[channel] = -Infinity;\n          }\n\n          scale_counter = 0;\n        }\n      }\n\n      if (scale_counter > 0) {\n        for (channel = 0; channel < output_channels; channel++) {\n          data_object.setInt8(offset++, min_value[channel]);\n          data_object.setInt8(offset++, max_value[channel]);\n        }\n      }\n\n      this.postMessage(data_object);\n      this.removeEventListener(\"message\", listener);\n      this.close();\n    });\n  });\n\n  worker.addEventListener(\"message\", function listener(evt) {\n    callback(evt.data);\n    // We're only sending a single message to each listener, so\n    // remove the callback afterwards to avoid leaks.\n    worker.removeEventListener(\"message\", listener);\n  });\n\n  worker.postMessage(workerArgs);\n}\n\n/**\n * This callback is executed once the audio has been decoded by the browser and\n * resampled by waveform-data.\n *\n * @callback onAudioResampled\n * @param {Error?}\n * @param {WaveformData} waveform_data Waveform instance of the browser decoded audio\n * @param {AudioBuffer} audio_buffer Decoded audio buffer\n */\n\n/**\n * AudioBuffer-based WaveformData generator\n *\n * Adapted from BlockFile::CalcSummary in Audacity, with permission.\n * @see https://code.google.com/p/audacity/source/browse/audacity-src/trunk/src/BlockFile.cpp\n *\n * @param {Object.<{scale: Number, amplitude_scale: Number, split_channels: Boolean}>} options\n * @param {onAudioResampled} callback\n * @returns {Function.<AudioBuffer>}\n */\n\nfunction getAudioDecoder(options, callback) {\n  return function onAudioDecoded(audio_buffer) {\n    // Construct a simple object with the necessary AudioBuffer data,\n    // as we cannot send an AudioBuffer to a Web Worker.\n    var audio_buffer_obj = {\n      length: audio_buffer.length,\n      sampleRate: audio_buffer.sampleRate,\n      channels: []\n    };\n\n    // Fill in the channels data.\n    for (var channel = 0; channel < audio_buffer.numberOfChannels; ++channel) {\n      audio_buffer_obj.channels[channel] = audio_buffer.getChannelData(channel);\n    }\n\n    var worker_args = {\n      scale: options.scale,\n      amplitude_scale: options.amplitude_scale,\n      split_channels: options.split_channels,\n      audio_buffer: audio_buffer_obj\n    };\n\n    processWorker(worker_args, function(data_object) {\n      callback(null, new WaveformData(data_object.buffer), audio_buffer);\n    });\n  };\n}\n\nmodule.exports = getAudioDecoder;\n","\"use strict\";\n\nvar defaultOptions = {\n  scale: 512,\n  amplitude_scale: 1.0,\n  split_channels: false\n};\n\nfunction getOptions(options) {\n  if (Object.prototype.hasOwnProperty.call(options, \"scale_adjuster\")) {\n    throw new Error(\"Please rename the 'scale_adjuster' option to 'amplitude_scale'\");\n  }\n\n  var opts = {\n    scale: options.scale || defaultOptions.scale,\n    amplitude_scale: options.amplitude_scale || defaultOptions.amplitude_scale,\n    split_channels: options.split_channels || defaultOptions.split_channels\n  };\n\n  return opts;\n}\n\nmodule.exports = getOptions;\n","\"use strict\";\n\nvar getAudioDecoder = require(\"./audiodecoder\");\nvar getOptions = require(\"./options\");\n\nfunction createFromArrayBuffer(audioContext, audioData, options, callback) {\n  // The following function is a workaround for a Webkit bug where decodeAudioData\n  // invokes the errorCallback with null instead of a DOMException.\n  // See https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata\n  // and http://stackoverflow.com/q/10365335/103396\n\n  function errorCallback(error) {\n    if (!error) {\n      error = new DOMException(\"EncodingError\");\n    }\n\n    callback(error);\n  }\n\n  audioContext.decodeAudioData(\n    audioData,\n    getAudioDecoder(options, callback),\n    errorCallback\n  );\n}\n\nfunction createFromAudioBuffer(audioBuffer, options, callback) {\n  var audioDecoder = getAudioDecoder(options, callback);\n\n  return audioDecoder(audioBuffer);\n}\n\n/**\n * Creates a working WaveformData based on binary audio data.\n *\n * This is still quite experimental and the result will mostly depend on the\n * level of browser support.\n *\n * ```javascript\n * const xhr = new XMLHttpRequest();\n * const audioContext = new AudioContext();\n *\n * // URL of a CORS MP3/Ogg file\n * xhr.open('GET', 'https://example.com/audio/track.ogg');\n * xhr.responseType = 'arraybuffer';\n *\n * xhr.addEventListener('load', function(progressEvent) {\n *   WaveformData.createFromAudio(audioContext, progressEvent.target.response,\n *     function(err, waveform) {\n *     if (err) {\n *       console.error(err);\n *       return;\n *     }\n *\n *     console.log(waveform.duration);\n *   });\n * });\n *\n * xhr.send();\n * ```\n *\n * @todo Use `SourceBuffer.appendBuffer` and `ProgressEvent` to stream the decoding?\n * @param {AudioContext|webkitAudioContext} audio_context\n * @param {ArrayBuffer} audio_data\n * @param {callback} what to do once the decoding is done\n * @constructor\n */\n\nfunction createFromAudio(options, callback) {\n  var opts = getOptions(options);\n\n  if (options.audio_context && options.array_buffer) {\n    return createFromArrayBuffer(options.audio_context, options.array_buffer, opts, callback);\n  }\n  else if (options.audio_buffer) {\n    return createFromAudioBuffer(options.audio_buffer, opts, callback);\n  }\n  else {\n    throw new TypeError(\"Please pass either an AudioContext and ArrayBuffer, or an AudioBuffer object\");\n  }\n}\n\nmodule.exports = createFromAudio;\n","\"use strict\";\n\nvar WaveformData = require(\"./lib/core\");\n\nWaveformData.createFromAudio = require(\"./lib/builders/webaudio\");\n\nmodule.exports = WaveformData;\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\"\n\timport WaveformData from \"waveform-data\"\n\timport * as d3 from 'd3'\n\n\texport let name: string;\n\texport let offsetY: number = 100;\n\t\n  let canvas: HTMLCanvasElement;\n  let player: HTMLDivElement;\n\tlet audio: HTMLAudioElement;\n\tlet graph: any;\n\tlet overlay: any;\n\tlet waves: any;\n\tlet svg: HTMLElement;\n\n  const audioContext = new AudioContext();\n\n  onMount(() => {\n\n    fetch(\"http://localhost:5000/test.wav\")\n      .then((response) => response.arrayBuffer())\n      .then((buffer) => {\n\n        const options = {\n          audio_context: audioContext,\n          array_buffer: buffer,\n          scale: 128,\n        };\n\n        return new Promise((resolve, reject) => {\n          WaveformData.createFromAudio(options, (err, waveform) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(waveform);\n            }\n\t\t\t\t\t});\n        });\n\t\t\t})\n      .then(canvasStyle)\n    \t.then(() => {\n    \t\twaves.style.transform = `translateX(0) scaleY(1)`\n\t\t\t})\n  });\n  \n  let isPlaying = false, isReady = false, duration = 0, initial = true;\n  \n  function onCanPlay() {\n  \tconsole.log('is ready!')\n\t\tisReady = true\n\t\t\n\t\tif (initial) {\n\t\t\tplay()\n\t\t\tinitial = false\n\t\t}\n\t}\n\t\n\tfunction onError(e) {\n  \tconsole.error(e)\n\t\tisPlaying = false\n\t}\n\t\n\tfunction onStop(e) {\n \t\tconsole.log('stop')\n\t\tisPlaying = false\n\t\toverlay.style.transitionDuration = '0'\n\t}\n\t\n\tfunction onStart(e) {\n\t\tconsole.log('start')\n\t\tisPlaying = true\n\t\toverlay.style.width = '0'\n\t\toverlay.style.transitionDuration = `0.6s`\n\t}\n\t\n\tfunction onPlaying(e) {\n \n\t}\n\t\n\tfunction onTimeUpdate(e) {\n  \tconst timeOffset = isPlaying ? 0.6 : 0\n  \tconst deltaT = (e.currentTarget.currentTime + timeOffset) / duration\n\t\tconst width = deltaT * 100\n\t\toverlay.style.width = `${isNaN(width) ? 0 : width}%`\n\t\toverlay.style.transitionDuration = `${timeOffset}s`\n\t}\n\t\n\tfunction onDurationChange(e) {\n  \tduration = e.currentTarget.duration\n\t\tconsole.log(duration)\n\t}\n  \n  function play() {\n  \t\n\t\tconsole.log(isReady, isPlaying)\n\t\t\n  \tif (!isPlaying && !isReady) {\n  \t\taudio.load()\n\t\t} else if (isReady && isPlaying) {\n\t\t\taudio.pause()\n\t\t\taudio.currentTime = 0;\n\t\t\treturn\n\t\t} else {\n\t\t\taudio.play()\n\t\t\treturn;\n\t\t}\n\t\n\t\taudio.volume = 1\n\t\taudio.loop = true\n\t\t\n\t\taudio.addEventListener('canplay', onCanPlay)\n\t\taudio.addEventListener('playing', onStart)\n\t\taudio.addEventListener('play', onStart)\n\t\taudio.addEventListener('pause', onStop)\n\t\taudio.addEventListener('playing', onPlaying)\n\t\taudio.addEventListener('timeupdate', onTimeUpdate)\n\t\taudio.addEventListener('durationchange', onDurationChange)\n\t\t\n\t}\n\t\n\tfunction svgStyle(waveform) {\n\t\t\n\t\tconst channel = waveform.channel(0);\n\t\t\n\t\tconst graph = d3.select('main')\n\t\t\t.select('.wave')\n\t\t\n\t\tconst x = d3.scaleLinear();\n\t\tconst y = d3.scaleLinear();\n\t\t\n\t\tconst min = channel.min_array();\n\t\tconst max = channel.max_array();\n\t\t\n\t\tx.domain([0, waveform.length]).rangeRound([0, 1024]);\n\t\ty.domain([d3.min(min) as any, d3.max(max)]).rangeRound([offsetY, -offsetY]);\n\t\t\n\t\tconst area = d3.area()\n\t\t\t.x((d, i) => x(i))\n\t\t\t.y0((d, i) => y(min[i]))\n\t\t\t.y1((d, i) => y(d));\n\t\t\n\t\tgraph.select(\"path\")\n\t\t\t.datum(max)\n\t\t\t.attr(\"transform\", () => `translate(0, ${offsetY})`)\n\t\t\t.attr(\"d\", area)\n\t\t\t.attr('id', 'main')\n\t\t\t.attr('style', `fill: green;`)\n\t\t\n\t\toverlay = graph.select('#cut-off-bottom')\n\t\t\t.attr('transform', () => `translate(0, -${offsetY})`)\n\t\t\t.select('rect')\n\t\t\n\t}\n\n\tfunction scaleY(amplitude, height) {\n\t\tconst range = 256;\n\t\tconst offset = 128;\n\t\n\t\treturn height - ((amplitude + offset) * height) / range;\n\t}\n\t\n\tlet wf: any\n\n  function canvasStyle(waveform) {\n\t\twf = waveform\n\t\tcanvas.width = canvas.clientWidth\n\t\tcanvas.height = canvas.clientHeight\n    let ctx = canvas.getContext(\"2d\");\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height)\n\t\tdrawLines(ctx, wf.length, \"black\")\n\t\t\n\t\tconst oc = overlay.querySelector('canvas')\n\t\toc.width = canvas.clientWidth\n\t\toc.height = canvas.clientHeight\n\t\tctx = oc.getContext(\"2d\")\n\t\tdrawLines(ctx, wf.length, \"green\")\n  }\n  \n  function drawLines(ctx: CanvasRenderingContext2D, amount: number, color: string) {\n  \n\t\tconst channel = wf.channel(0);\n\t\tconst fx = canvas.width / wf.length\n\t\tconst xMax = Math.min(amount, wf.length - 1)\n  \n\t\tctx.clearRect(0, 0, fx * xMax, canvas.height)\n\t\t\n\t\tctx.beginPath();\n\t\tctx.fillStyle = color\n\t\tctx.strokeStyle = color\n\t\t\n\t\t// Loop forwards, drawing the upper half of the waveform\n\t\tfor (let x = 0; x < Math.min(amount, wf.length); x++) {\n\t\t\tconst val = channel.max_sample(x);\n\t\t\tctx.lineTo(x * fx, scaleY(val, canvas.height) + fx);\n\t\t}\n\t\n\t\t// Loop backwards, drawing the lower half of the waveform\n\t\tfor (let x = xMax; x >= 0; x--) {\n\t\t\tconst val = channel.min_sample(x);\n\t\t\tctx.lineTo(x * fx, scaleY(val, canvas.height) + fx);\n\t\t}\n\t\n\t\tctx.closePath();\n\t\tctx.stroke();\n\t\tctx.fill();\n\t\t\n\t}\n</script>\n\n<style>\n  main {\n    position: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n    padding: 0;\n    margin: 0;\n    overflow: hidden;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbackground-color: #333333;\n\t\toverflow: hidden;\n  }\n\n  .canvas-main {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n\t\tposition: relative;\n\t\twidth: 100%;\n  }\n\t\n\t.wave {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 200px;\n    padding: 0;\n    margin: 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t\n\t.wave-one:last-of-type path {\n\t\tfill: green;\n\t}\n\t\n\tbutton {\n\t\tposition: relative;\n\t\toutline: none;\n\t\tborder-radius: 50%;\n\t\theight: 42px;\n\t\twidth: 42px;\n\t\tborder: 1px solid #FF7043;\n\t\tbackground-color: #fafafa;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbox-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n\t\ttransition: all 0.4s cubic-bezier(.25,.8,.25,1);\n\t}\n\t\n\tbutton:hover {\n\t\tbox-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n\t\ttransform: scale(1.02);\n\t}\n\t\n\t.icon {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tposition: relative;\n\t\tfill: blue;\n\t}\n\t\n\t.controls {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\twidth: auto;\n\t\tdisplay: flex;\n\t\tpadding: 32px 32px;\n\t\tz-index: 100;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t\n\t.overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t}\n\t\n\t.overlay-container {\n\t\tposition: absolute;\n\t\ttransition: all;\n\t\ttransition-duration: 0.6s;\n\t\toverflow: hidden;\n\t\tz-index: 1;\n\t\tright: 0;\n\t\tleft:0;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\twidth: 0;\n\t}\n\t\n\t.player {\n\t\twidth: 100%;\n\t\theight: auto;\n\t\tposition: relative;\n\t}\n\t\n\t.waves {\n\t\ttransition: all 1s;\n\t\ttransform: translateX(-100%) scaleY(0);\n\t\ttransform-origin: left center;\n\t}\n\t\n</style>\n\n\n<main>\n\t<div class=\"player\" bind:this={player}>\n\t\t<div class=\"controls\">\n\t\t\t<button on:click={play}>\n\t\t\t\t{#if isPlaying}\n\t\t\t\t\t<svg class=\"icon\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path d=\"M6 5L6 19L10 19L10 5L6 5 z M 14 5L14 19L18 19L18 5L14 5 z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t{:else}\n\t\t\t\t\t<svg class=\"icon\"  viewBox=\"0 0 24 24\"><path d=\"M8,5v14l11-7L8,5z\"/></svg>\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"waves\" bind:this={waves}>\n\t\t\t<audio bind:this={audio} preload=\"auto\">\n\t\t\t\t<source src=\"http://localhost:5000/test.wav\" type=\"audio/wav\" />\n\t\t\t</audio>\n\t\t\t<canvas bind:this={canvas} width=\"800\" height=\"300\" class=\"canvas-main\">\n\t\t\t</canvas>\n\t\t\t<div class=\"overlay-container\" bind:this={overlay}>\n\t\t\t\t<canvas width=\"800\" height=\"300\" class=\"overlay\">\n\t\t\t\t</canvas>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t\n<!--\t<svg class=\"wave\" bind:this={svg}>-->\n<!--\t\t<defs>-->\n<!--\t\t\t<clipPath id=\"cut-off-bottom\">-->\n<!--\t\t\t\t<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />-->\n<!--\t\t\t</clipPath>-->\n<!--\t\t</defs>-->\n<!--\t\t<path />-->\n<!--\t</svg>-->\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.getElementById(\"root\"),\n    props: {\n        name: 'world'\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","space","data","createTextNode","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","WaveformDataChannel","waveformData","channelIndex","this","_waveformData","_channelIndex","prototype","min_sample","index","offset","channels","_adapter","at","max_sample","min_array","_offsetValues","max_array","WaveformDataObjectAdapter","_data","isCompatible","version","bits","sample_rate","scale","samples_per_pixel","RangeError","concatBuffers","otherAdapters","slice","call","arguments","otherDatas","result","assign","concat","apply","reduce","sum","adapter","WaveformDataArrayBufferAdapter","buffer","DataView","_offset","getInt32","TypeError","Boolean","getUint32","getInt8","headerSize","totalSize","totalDataLength","bufferCollection","w","dataSize","byteLength","totalBuffer","ArrayBuffer","sourceHeader","totalBufferView","setUint8","getUint8","setInt32","dataOfTotalBuffer","Uint8Array","set","adapters","WaveformData","Adapter","_getAdapter","_channels","channel","some","AdapterClass","resample","width","input_index","output_index","is_partial_resampling","definedPartialOptionsCount","count","key","output_data","Math","floor","duration","channel_count","input_buffer_size","min","max","where","stop","last_input_index","sample_at_pixel","x","add_sample","self","otherWaveforms","otherWaveform","getPrototypeOf","combinedBuffer","start","correction","values","pixels_per_second","seconds_per_pixel","at_time","time","WORKER_ENABLED","global","window","URL","Blob","Worker","InlineWorker","func","functionBody","_this","toString","trim","match","createObjectURL","type","postMessage","setTimeout","onmessage","bind","processWorker","workerArgs","worker","INT8_MAX","INT8_MIN","addEventListener","listener","evt","amplitude_scale","split_channels","audio_buffer","output_channels","header_size","data_length","audio_sample_count","calculateWaveformDataLength","data_object","scale_counter","buffer_length","min_value","max_value","Infinity","setUint32","sampleRate","sample","setInt8","removeEventListener","close","audio_buffer_obj","numberOfChannels","getChannelData","defaultOptions","hasOwnProperty","opts","getOptions","audio_context","array_buffer","audioContext","audioData","decodeAudioData","getAudioDecoder","error","DOMException","createFromArrayBuffer","audioBuffer","audioDecoder","createFromAudioBuffer","createFromAudio","require$$0","dispatch","t","n","_","test","Dispatch","parseTypenames","typenames","types","split","indexOf","get","constructor","on","typename","T","copy","that","args","event","handler","onPlaying","e","scaleY","amplitude","height","canvas","player","audio","overlay","waves","offsetY","AudioContext","fetch","response","arrayBuffer","reject","err","waveform","canvasStyle","style","transform","wf","isPlaying","isReady","initial","onCanPlay","console","log","play","onStop","transitionDuration","onStart","onTimeUpdate","timeOffset","currentTarget","currentTime","isNaN","onDurationChange","pause","load","volume","loop","clientWidth","clientHeight","getContext","clearRect","drawLines","oc","querySelector","amount","color","fx","xMax","beginPath","fillStyle","strokeStyle","val","lineTo","closePath","stroke","[object Object]","detaching","d","destroy_component","$destroy","splice","$$props","obj","$$set","keys","getElementById"],"mappings":"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"}